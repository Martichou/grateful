apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.google.firebase.firebase-perf'
//apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.compileSdkVersion
    dataBinding {
        enabled = true
    }
    defaultConfig {
        versionCode 100
        versionName "1.1.1"
        applicationId "me.martichou.be.grateful"
        vectorDrawables.useSupportLibrary true
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            versionNameSuffix "-debug"
            minifyEnabled false
            shrinkResources false
            useProguard false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

kapt {
    correctErrorTypes = true
    javacOptions {
        option("-Xmaxerrs", 1000)
    }
}

android.applicationVariants.all {
    // Set this to false to disable Firebase Performance Monitoring at compile time
    FirebasePerformance {
        instrumentationEnabled true
    }
}

ext {
    lifecycle = '2.0.0'
    koin = "1.0.2"
    glide = "4.8.0"
    coroutines = '1.0.0'
    firebase = '16.0.7'
    imgcropper = '2.7.0'
    timber = '4.7.1'
    supportLibraryVersion = '1.1.0-alpha02'
    constraintLyt = '2.0.0-alpha3'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines"

    // Support Libraries
    implementation "androidx.core:core-ktx:1.0.1"
    implementation "androidx.room:room-runtime:2.1.0-alpha04"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.recyclerview:recyclerview:$supportLibraryVersion"
    implementation "com.google.android.material:material:1.1.0-alpha03"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLyt"
    implementation "androidx.constraintlayout:constraintlayout-solver:$constraintLyt"

    // Architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle"

    // Navigation Arch Component
    implementation "android.arch.navigation:navigation-fragment:$rootProject.navigationVersion"
    implementation "android.arch.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "android.arch.navigation:navigation-ui:$rootProject.navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber"

    // Firebase needed
    implementation "com.google.firebase:firebase-core:$firebase"
    //implementation "com.crashlytics.sdk.android:crashlytics:$rootProject.crashlytics"
    implementation 'com.google.firebase:firebase-perf:16.2.3'

    // Maps
    implementation 'com.google.android.libraries.places:places-compat:1.0.0'

    // Image cropper
    implementation "com.theartofdev.edmodo:android-image-cropper:$imgcropper"
}

apply plugin: 'com.google.gms.google-services'